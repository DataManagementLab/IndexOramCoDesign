// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/* This is your enclave EDL file, please specify the EDL files you need and ECALLs/OCALLs needed */

enclave {
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;
    trusted
    {
        /* ECALLs */
        public sgx_status_t ecall_generic_request([in, size = request_len] uint8_t *request, uint32_t request_len);
        public sgx_status_t ecall_run_tests();
        sgx_status_t ecall_return_oram_path([in, size = buckets_len] uint8_t *buckets, uint32_t buckets_len, uint64_t single_bucket_len);
    };
    untrusted {
        /* OCALLs */
        sgx_status_t ocall_get_oram_batch(uint32_t instance, [in, size = leaves_len] uint8_t *leaves, uint32_t leaves_len) allow (ecall_return_oram_path);
        sgx_status_t ocall_write_oram_batch(uint32_t instance, [in, size = leaves_len] uint8_t *leaves, uint32_t leaves_len, [in, size = buckets_len] uint8_t *buckets, uint32_t buckets_len);
        sgx_status_t ocall_generic_request([in, size = request_len] uint8_t *request, uint32_t request_len);
        sgx_status_t ocall_setup_oram(uint32_t instance, uint32_t offset, [in, size = buckets_len] uint8_t *buckets, uint32_t buckets_len);
    };
};
